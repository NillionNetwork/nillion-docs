paths:
  /api/v1/data/create:
    post:
      summary: Upload data
      description: Upload data to the specified schema collection
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schema
                - data
              properties:
                schema:
                  description: The schema's uuid used to validate data
                  type: string
                  format: uuid
                data:
                  type: array
                  items:
                    type: object
                    additionalProperties:
                      description: An object whose shape matches the targeted schema.
                      type: object
      responses:
        '200':
          description: The outcome of the data upload operation. The operation can be partially successful.
          content:
            application/json:
              schema:
                type: object
                required:
                  - created
                  - errors
                properties:
                  created:
                    description: The uuids from successfully created documents
                    type: array
                    items:
                      $ref: './base.openapi.yaml#/components/schemas/UUID'
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - error
                        - document
                      properties:
                        error:
                          type: string
                        document:
                          type: object
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/v1/data/read:
    post:
      summary: Read data
      description: Retrieve data from the specified schema collection that matches the provided filter
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schema
                - filter
              properties:
                schema:
                  $ref: './base.openapi.yaml#/components/schemas/UUID'
                filter:
                  $ref: './base.openapi.yaml#/components/schemas/Filter'
      responses:
        '200':
          description: Data documents that match the provided filter. Pagination is not supported.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: './base.openapi.yaml#/components/schemas/DataDocument'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/v1/data/update:
    post:
      summary: Update data
      description: Update documents within a schema collection that match the given filter
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schema
                - filter
                - update
              properties:
                schema:
                  $ref: './base.openapi.yaml#/components/schemas/UUID'
                filter:
                  $ref: './base.openapi.yaml#/components/schemas/Filter'
                update:
                  additionalProperties:
                    type: object
                    description: A flexible object allowing any key-value pairs, where values can be of any type.
      responses:
        '200':
          description: The result of the update operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - matchedCount
                      - modifiedCount
                    properties:
                      matched:
                        type: number
                      updated:
                        type: number
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/v1/data/tail:
    post:
      summary: List new data
      description: List recently added documents from a schema collection
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - schema
              properties:
                schema:
                  $ref: './base.openapi.yaml#/components/schemas/UUID'
      responses:
        '200':
          description: The last 25 latest documents added to the schema collection
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: './base.openapi.yaml#/components/schemas/DataDocument'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/v1/data/delete:
    post:
      summary: Delete data
      description: Delete data records that match a given filter
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                schema:
                  $ref: './base.openapi.yaml#/components/schemas/UUID'
                filter:
                  $ref: './base.openapi.yaml#/components/schemas/Filter'
      responses:
        '204':
          $ref: './base.openapi.yaml#/components/responses/204'
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
  /api/v1/data/flush:
    post:
      summary: Delete all data
      description: Remove all documents in a schema collection
      security:
        - jwt: []
      tags:
        - Data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  properties:
                    schema:
                      $ref: './base.openapi.yaml#/components/schemas/UUID'
      responses:
        '200':
          description: The total documents removed
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      deletedCount:
                        type: number
        '400':
          $ref: './base.openapi.yaml#/components/responses/400'
        '401':
          $ref: './base.openapi.yaml#/components/responses/401'
        '500':
          $ref: './base.openapi.yaml#/components/responses/500'
